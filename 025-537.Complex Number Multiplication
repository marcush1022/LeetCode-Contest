/*****************************************************************************************/
Given two strings representing two complex numbers.

You need to return a string representing their multiplication. Note i2 = -1 according to
the definition.

Example 1:
Input: "1+1i", "1+1i"
Output: "0+2i"
Explanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form 
of 0+2i.
Example 2:
Input: "1+-1i", "1+-1i"
Output: "0+-2i"
Explanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form
of 0+-2i.
Note:

The input strings will not have extra blank.
The input strings will be given in the form of a+bi, where the integer a and b will both 
belong to the range of [-100, 100]. And the output should be also in this form.
/*****************************************************************************************/

class Solution {
public:
    vector<int> getNums(string str)
	{
		int i=0;
		vector<int> ret;
		while(str[i]!='+')
			i++;
		int a=stoi(str.substr(0, i));
		int b=stoi(str.substr(i+1, str.length()-1));
		ret.push_back(a);
		ret.push_back(b);
		return ret;
	}
	
	string complexNumberMultiply(string a, string b)
	{
		vector<int> complex1=getNums(a);
		vector<int> complex2=getNums(b);
		return to_string(complex1[0]*complex2[0]-complex1[1]*complex2[1])+'+'+to_string(complex1[0]*complex2[1]+complex1[1]*complex2[0])+'i';
	}
};
