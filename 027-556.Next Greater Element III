/*********************************************************************************/
Given a positive 32-bit integer n, you need to find the smallest 32-bit integer 
which has exactly the same digits existing in the integer n and is greater in value
than n. If no such positive 32-bit integer exists, you need to return -1.

Example 1:
Input: 12
Output: 21
Example 2:
Input: 21
Output: -1
/*********************************************************************************/

class Solution {
public:
    int nextGreaterElement(int n) {
        string num=to_string(n);
		int len=num.length();
		int i=len-1;
		while(i>0 && num[i]<=num[i-1])
			i--;
		reverse(num.begin()+i, num.end());
		if(i==0)
			return -1;
		for(int j=i; j<len; j++)
			if(num[j]>num[i-1])
			{
				swap(num[j], num[i-1]);
				break;
			}
		if(num>to_string(INT_MAX) && num.size()==10)
		    return -1;
		return stoi(num);
    }
};
