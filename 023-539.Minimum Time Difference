/*************************************************************************************************/
Given a list of 24-hour clock time points in "Hour:Minutes" format, find the minimum minutes
difference between any two time points in the list.

Example 1:
Input: ["23:59","00:00"]
Output: 1
Note:
The number of time points in the given list is at least 2 and won't exceed 20000.
The input time is legal and ranges from 00:00 to 23:59.
/*************************************************************************************************/


class Solution {
public:
	int timeToInt(string time)
	{
		int i=0;
		int ret;
		while(time[i]!=':')
			i++;
		int h=stoi(time.substr(0, i));
		int m=stoi(time.substr(i+1, time.length()-1));
		ret=h*60+m;
		return ret;
	}
	
	int findMinDifference(vector<string>& timePoints)
	{
		int len=timePoints.size();
		if(len<=1)
			return 0;
		sort(timePoints.begin(), timePoints.end());
		int minDiff=24*60-timeToInt(timePoints[len-1])+timeToInt(timePoints[0]);
		for(int i=0; i<len-1; i++)
		{
			int tmp=timeToInt(timePoints[i+1])-timeToInt(timePoints[i]);
			minDiff=min(tmp, minDiff);
		}
		return minDiff;
	}
};
