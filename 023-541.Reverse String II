/***************************************************************************************************/
Given a string and an integer k, you need to reverse the first k characters for every 2k characters 
counting from the start of the string. If there are less than k characters left, reverse all of them.
If there are less than 2k but greater than or equal to k characters, then reverse the first k characters 
and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]
/***************************************************************************************************/

class Solution {
public:
	void doReverse(string &s, int left, int right)
	{
		while(left<right)
		{
			swap(s[left], s[right]);
			left++;
			right--;
		}
	}

	string reverseStr(string s, int k)
	{
		int len=s.length();
		if(len==0)
			return s;
		if(k>len)
		{
			doReverse(s, 0, len-1);
			return s;
		}
		int left=0, right=0;
		while(right<k-1)
			right++;
		while(left<len)
		{
		    right=min(right, len-1);
			doReverse(s, left, right);
			left+=2*k;
			right+=2*k;
		}
		return s;
	}
};
